# syntax=docker/dockerfile:1

FROM php:8.1-apache

RUN apt-get update -y && apt-get install -y mc libmcrypt-dev libicu-dev g++ libzip-dev zip libcurl3-dev curl libpng-dev libfreetype6-dev \
               libjpeg-dev libjpeg62-turbo-dev gnupg mc vim bash \
               wget bzip2 libxtst6 libgtk-3-0 libx11-xcb-dev libdbus-glib-1-2 libxt6 libpci-dev \
              && rm -rf /var/lib/apt/lists/*


RUN a2enmod rewrite
RUN cp /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/

# Composer
COPY --from=composer:2.3.9 /usr/bin/composer /usr/local/bin/composer


ARG FIREFOX_VERSION=91.0.2
RUN curl -fsSL -o /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \
        && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
        && rm /tmp/firefox.tar.bz2 \
        && ln -fs /opt/firefox/firefox /usr/bin/firefox



# Chromium and ChromeDriver
ENV PANTHER_NO_SANDBOX 1
# Not mandatory, but recommended
ENV PANTHER_CHROME_ARGUMENTS='--disable-dev-shm-usage'
#RUN apt-get install chromium chromium-chromedriver


# Firefox and GeckoDriver (optional)
ARG GECKODRIVER_VERSION=0.28.0
RUN curl -fsSL -o /tmp/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz; \
    tar -zxf /tmp/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz -C /usr/bin; \
    rm /tmp/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz



RUN docker-php-ext-configure intl

RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install -j$(nproc) gd
RUN docker-php-ext-install zip pdo_mysql intl curl

RUN pecl install xdebug
RUN docker-php-ext-enable xdebug

RUN cp "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

RUN cd /usr/local/etc/php/conf.d/ && echo 'memory_limit = 768M' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
RUN cd /usr/local/etc/php/ && echo 'error_log = /dev/stderr' >> /usr/local/etc/php/php.ini


RUN service apache2 restart

ARG UID
ARG GID
ARG USER

RUN groupadd -g ${GID} ${USER}
RUN useradd -m -u ${UID} -g ${GID} -o -s /bin/bash ${USER}


EXPOSE 80
